{"ast":null,"code":"import { GET_DOGS, GET_DOGS_NAME } from '../actions';\nconst initialState = {\n  dogs: [],\n  AllDogs: []\n};\n\nconst RootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_DOGS:\n      return { ...state,\n        dogs: action.payload,\n        AllDogs: action.payload\n      };\n\n    case GET_DOGS_NAME:\n      return { ...state,\n        dogs: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = RootReducer;\nexport default RootReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RootReducer\");","map":{"version":3,"names":["GET_DOGS","GET_DOGS_NAME","initialState","dogs","AllDogs","RootReducer","state","action","type","payload"],"sources":["/home/mauri-cj/Desktop/PI-Dogs-main/client/src/reducer/index.js"],"sourcesContent":["import { GET_DOGS , GET_DOGS_NAME } from '../actions';\n\nconst initialState = {\n  dogs: [],\n  AllDogs: []\n};\n\nconst RootReducer = ( state = initialState , action ) => {\n\n  switch (action.type) {\n    case GET_DOGS:\n      return {\n        ...state,\n        dogs: action.payload,\n        AllDogs: action.payload\n      }\n\n    case GET_DOGS_NAME:\n      return {\n        ...state,\n        dogs: action.payload\n      }\n\n    default:\n      return state;\n\n  }\n};\n\nexport default RootReducer ;"],"mappings":"AAAA,SAASA,QAAT,EAAoBC,aAApB,QAAyC,YAAzC;AAEA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EADa;EAEnBC,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,WAAW,GAAG,YAAqC;EAAA,IAAnCC,KAAmC,uEAA3BJ,YAA2B;EAAA,IAAZK,MAAY;;EAEvD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKR,QAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELH,IAAI,EAAEI,MAAM,CAACE,OAFR;QAGLL,OAAO,EAAEG,MAAM,CAACE;MAHX,CAAP;;IAMF,KAAKR,aAAL;MACE,OAAO,EACL,GAAGK,KADE;QAELH,IAAI,EAAEI,MAAM,CAACE;MAFR,CAAP;;IAKF;MACE,OAAOH,KAAP;EAfJ;AAkBD,CApBD;;KAAMD,W;AAsBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}